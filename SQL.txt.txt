--1- Devuelve todas las películas
 SELECT MOVIE_NAME FROM MOVIES m

--2- Devuelve todos los géneros existentes
 SELECT GENRE_NAME FROM GENRES g 
 
--3- Devuelve la lista de todos los estudios de grabación que estén activos
 SELECT * FROM STUDIOS s WHERE STUDIO_ACTIVE = 1

 --4- Devuelve una lista de los 20 últimos miembros en anotarse a la plataforma
 SELECT * FROM USERS ORDER BY user_join_date DESC LIMIT 20

-- 5- Devuelve las 20 duraciones de películas más frecuentes, ordenados de mayor a menor
SELECT m.MOVIE_DURATION FROM MOVIES m ORDER BY m.MOVIE_DURATION DESC LIMIT 20
 
-- 6- Devuelve las películas del año 2000 en adelante que empiecen por la letra A.
 6 SELECT * FROM (SELECT *FROM movies WHERE movie_release_date >= '2000-01-01') WHERE movie_name LIKE 'A%';

-- 7- Devuelve los actores nacidos un mes de Junio
SELECT * FROM ACTORS a WHERE MONTH (a.ACTOR_BIRTH_DATE) = 6

-- 8- Devuelve los actores nacidos cualquier mes que no sea Junio y que sigan vivos
SELECT * FROM ACTORS a WHERE MONTH (a.ACTOR_BIRTH_DATE) <> 6 AND a.ACTOR_DEAD_DATE IS NULL

-- 9- Devuelve el nombre y la edad de todos los directores menores o iguales de 50 años que estén vivos
SELECT DIRECTOR_NAME, director_birth_date FROM DIRECTORS WHERE DIRECTOR_birth_date >= '1975-10-09' AND DIRECTOR_DEAD_DATE IS NULL

-- 10- Devuelve el nombre y la edad de todos los actores menores de 50 años que hayan fallecido
SELECT actor_name, actor_birth_date FROM actors WHERE actor_birth_date > '1975-10-09'AND actor_dead_date IS NOT NULL

-- 11- Devuelve el nombre de todos los directores menores o iguales de 40 años que estén vivos
SELECT actor_name FROM actors WHERE actor_birth_date >= '1985-10-09' AND actor_dead_date IS NULL

--12.- Indica la edad media de los directores vivos
SELECT AVG(YEAR(CURRENT_DATE) - YEAR(DIRECTOR_BIRTH_DATE)) AS EDADMEDIA FROM DIRECTORS WHERE DIRECTOR_DEAD_DATE IS NULL;

--13.- Indica la edad media de los actores que han fallecido
SELECT AVG(YEAR(DIRECTOR_DEAD_DATE) - YEAR(DIRECTOR_BIRTH_DATE)) AS EDADMEDIA FROM DIRECTORS WHERE DIRECTOR_DEAD_DATE IS NOT NULL;

--14.- Devuelve el nombre de todas las películas y el nombre del estudio que las ha realizado
SELECT m.MOVIE_NAME, s.STUDIO_NAME FROM MOVIES m INNER JOIN STUDIOS s ON m.STUDIO_ID = s.STUDIO_ID;

--15.- Devuelve los miembros que accedieron al menos una película entre el año 2010 y el 2015
SELECT USER_NAME 
FROM USERS u INNER JOIN USER_MOVIE_ACCESS uma ON u.USER_ID = uma.USER_ID WHERE YEAR(uma.ACCESS_DATE) >= 2010 AND YEAR(uma.ACCESS_DATE) <= 2015;

--16.- Devuelve cuántas películas hay de cada país
SELECT n.NATIONALITY_NAME, COUNT(n.NATIONALITY_ID) FROM MOVIES m INNER JOIN NATIONALITIES n ON m.NATIONALITY_ID = n.NATIONALITY_ID GROUP BY n.NATIONALITY_NAME;

--17.- Devuelve todas las películas que hay de tipo “Documentary”
SELECT m.MOVIE_NAME FROM MOVIES m INNER JOIN GENRES g ON m.GENRE_ID = g.GENRE_ID WHERE g.GENRE_NAME = 'Documentary';

--18.- Devuelve todas las películas creadas por directores nacidos a partir de 1980 y que todavía están vivos
SELECT m.MOVIE_NAME FROM MOVIES m INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID WHERE YEAR(d.DIRECTOR_BIRTH_DATE) > 1980 AND d.DIRECTOR_DEAD_DATE IS NULL;

--19.- Indica si hay alguna coincidencia en nacimiento de ciudad y si las hay, indícalas entre los miembros de la plataforma y los directores
SELECT u.USER_NAME AS usuario, d.DIRECTOR_NAME AS director, u.USER_TOWN AS coincidencia FROM USERS u INNER JOIN DIRECTORS d ON u.USER_TOWN = d.DIRECTOR_BIRTH_PLACE;

--20.- Devuelve el nombre y el año de todas las películas que han sido producidas por un estudio que actualmente no está activo
SELECT m.MOVIE_NAME, YEAR(m.MOVIE_RELEASE_DATE) AS AÑO FROM MOVIES m INNER JOIN STUDIOS s ON m.STUDIO_ID = s.STUDIO_ID WHERE s.STUDIO_ACTIVE = 0;

-- 21.- Devuelve una lista de las últimas 10 películas a las que se ha accedido
SELECT MOVIE_ID FROM USER_MOVIE_ACCESS ORDER BY ACCESS_DATE DESC LIMIT 10;

-- 22- Indica cuántas películas ha realizado cada director antes de cumplir 41 años
SELECT d.director_id, d.director_name, COUNT(m.movie_name) AS peliculas_antes_de41 FROM movies m JOIN directors d ON m.director_id = d.director_id WHERE (julianday(m.movie_release_date) - julianday(d.director_birth_day)) / 365 < 41 GROUP BY d.director_id, d.director_name;

-- 23- Indica cuál es la media de duración de las películas de cada director
SELECT d.DIRECTOR_NAME, AVG(m.MOVIE_DURATION) FROM DIRECTORS d INNER JOIN MOVIES m ON d.DIRECTOR_ID = m.DIRECTOR_ID GROUP BY d.DIRECTOR_NAME;

-- 24- Indica cuál es la el nombre y la duración mínima de las películas a las que se ha accedido en los últimos 2 años por los miembros del plataforma (La “fecha de ejecución” de esta consulta es el 25-01-2019)
SELECT m.MOVIE_DURATION, m.MOVIE_NAME FROM MOVIES m INNER JOIN USER_MOVIE_ACCESS u ON m.MOVIE_ID = u.MOVIE_ID WHERE u.ACCESS_DATE BETWEEN '2017-01-25' AND '2019-01-25';

-- 25- Indica el número de películas que hayan hecho los directores durante las décadas de los 60, 70 y 80 que contengan la palabra “The” en cualquier par

SELECT m.movie_name, n.nationality_name, d.director_name FROM movies AS m JOIN nationalities AS n ON m.nationality_id = n.nationality_id JOIN directors AS d ON m.director_id = d.director_id;

-- 27- Muestra las películas con los actores que han participado en cada una de ellas
SELECT m.movie_name, a.actor_name FROM movies AS m JOIN movies_actors AS ma ON m.movie_id = ma.movie_id JOIN actors AS a ON ma.actor_id = a.actor_id;

-- 28- Indica cual es el nombre del director del que más películas se ha accedido
SELECT d.director_name FROM directors AS d JOIN movies AS m ON d.director_id = m.director_id JOIN user_movie_access AS uma ON m.movie_id = uma.movie_id GROUP BY d.director_name ORDER BY COUNT(uma.access_id) DESC FETCH FIRST 1 ROWS ONLY;

-- 29- Indica cuantos premios han ganado cada uno de los estudios con las películas que han creado
SELECT s.STUDIO_NAME, SUM(a.AWARD_WIN) AS TOTAL_PREMIOS_GANADOS FROM STUDIOS s JOIN MOVIES m ON s.STUDIO_ID = m.STUDIO_ID JOIN MOVIE_AWARDS ma ON m.MOVIE_ID = ma.MOVIE_ID JOIN AWARDS a ON ma.AWARD_ID = a.AWARD_ID GROUP BY s.STUDIO_NAME ORDER BY TOTAL_PREMIOS_GANADOS DESC;

30- Indica el número de premios a los que estuvo nominado un actor, pero que no ha conseguido (Si una película está nominada a un premio, su actor también lo está)
SELECT
	a2.ACTOR_NAME AS ACTOR,
	m.MOVIE_NAME AS MOVIE,
	SUM(a.AWARD_ALMOST_WIN) AS NOT_WON_NOMINATION
FROM
	AWARDS a
INNER JOIN
	MOVIES m
	ON
		a.MOVIE_ID = m.MOVIE_ID
INNER JOIN
	MOVIES_ACTORS ma
	ON
		m.MOVIE_ID = ma.MOVIE_ID
INNER JOIN
	ACTORS a2
	ON
		ma.ACTOR_ID = a2.ACTOR_ID
GROUP BY
	ACTOR,
	MOVIE
ORDER BY
	ACTOR,
	NOT_WON_NOMINATION;
 
SELECT
	a2.ACTOR_NAME AS ACTOR,
	SUM(a.AWARD_ALMOST_WIN) AS NOT_WON_NOMINATION
FROM
	AWARDS a
INNER JOIN
	MOVIES m
	ON
		a.MOVIE_ID = m.MOVIE_ID
INNER JOIN
	MOVIES_ACTORS ma
	ON
		m.MOVIE_ID = ma.MOVIE_ID
INNER JOIN
	ACTORS a2
	ON
		ma.ACTOR_ID = a2.ACTOR_ID
GROUP BY
	ACTOR
ORDER BY
	NOT_WON_NOMINATION;

31- Indica cuantos actores y directores hicieron películas para los estudios no activos
SELECT COUNT(DISTINCT M.DIRECTOR_ID) AS DIRECTOR_NUMBER,
       COUNT(DISTINCT MA.ACTOR_ID) AS ACTOR_NUMBER
FROM STUDIOS S
INNER JOIN MOVIES M ON M.STUDIO_ID = S.STUDIO_ID
INNER JOIN MOVIES_ACTORS MA ON MA.MOVIE_ID = M.MOVIE_ID
WHERE S.STUDIO_ACTIVE = FALSE

32- Indica el nombre, ciudad, y teléfono de todos los miembros de la plataforma que hayan accedido películas que hayan sido nominadas a más de 150 premios y ganaran menos de 50
SELECT u.USER_NAME AS NOMBRE, u.USER_TOWN AS CIUDAD, u.USER_PHONE AS TELEFONO FROM USERS u JOIN USER_MOVIE_ACCESS uma ON u.USER_ID = uma.USER_ID JOIN MOVIES m ON uma.MOVIE_ID = m.MOVIE_ID JOIN AWARDS a ON m.MOVIE_ID = a.MOVIE_ID WHERE a.AWARD_NOMINATION > 150 AND a.AWARD_WIN < 50 GROUP BY u.USER_NAME, u.USER_TOWN, u.USER_PHONE ORDER BY u.USER_NAME; 

33- Comprueba si hay errores en la BD entre las películas y directores (un director muerto en el 76 no puede dirigir una película en el 88)
SELECT d.DIRECTOR_NAME 
FROM MOVIES m 
INNER JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID 
WHERE m.DIRECTOR_ID IN (
    SELECT m.DIRECTOR_ID 
    FROM MOVIES m 
    WHERE m.SENSIBLE = 1 
    GROUP BY m.DIRECTOR_ID 
    HAVING COUNT(*) >= 5
) 
AND m.DIRECTOR_ID IN (
    SELECT m.DIRECTOR_ID 
    FROM MOVIES m 
    INNER JOIN AWARDS a ON m.MOVIE_ID = a.MOVIE_ID 
    GROUP BY m.DIRECTOR_ID 
    HAVING SUM(a.AWARD_MIN) < 50
);


35- Indica cuál es el género favorito de cada uno de los directores cuando dirigen una película

WITH GENRE_COUNTS AS
  (SELECT D.DIRECTOR_ID,
          D.DIRECTOR_NAME,
          G.GENRE_ID,
          G.GENRE_NAME,
          COUNT(*) AS NUM_MOVIES
   FROM MOVIES M
   INNER JOIN GENRES G ON M.GENRE_ID = G.GENRE_ID
   INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID
   GROUP BY D.DIRECTOR_ID,
            D.DIRECTOR_NAME,
            G.GENRE_ID,
            G.GENRE_NAME),
     MAX_GENRE AS
  (SELECT DIRECTOR_ID,
          MAX(NUM_MOVIES) AS MAX_MOVIES
   FROM GENRE_COUNTS
   GROUP BY DIRECTOR_ID)
SELECT GC.DIRECTOR_NAME,
       GROUP_CONCAT(GC.GENRE_NAME) AS GENRE_NAME
FROM GENRE_COUNTS GC
INNER JOIN MAX_GENRE MG ON GC.DIRECTOR_ID = MG.DIRECTOR_ID
AND GC.NUM_MOVIES = MG.MAX_MOVIES
GROUP BY GC.DIRECTOR_NAME;

36- Indica cuál es la nacionalidad favorita de cada uno de los estudios en la producción de las películas
SELECT STUDIO_NAME,
       GROUP_CONCAT(NATIONALITY_NAME) AS NATIONALITY_NAME
FROM
  (SELECT COUNT(N.NATIONALITY_ID) AS NUM_MOVIES,
          S.STUDIO_NAME,
          N.NATIONALITY_NAME,
          S.STUDIO_ID,
          N.NATIONALITY_ID
   FROM MOVIES M
   INNER JOIN NATIONALITIES N ON N.NATIONALITY_ID = M.NATIONALITY_ID
   INNER JOIN STUDIOS S ON S.STUDIO_ID = M.STUDIO_ID
   GROUP BY S.STUDIO_ID,
            N.NATIONALITY_ID
   ORDER BY S.STUDIO_ID ASC,
            NUM_MOVIES DESC) TOT
INNER JOIN
  (SELECT STUDIO_ID,
          MAX (NUM_MOVIES) AS NUM_MOVIES
   FROM
     (SELECT COUNT(N.NATIONALITY_ID) AS NUM_MOVIES,
             S.STUDIO_NAME,
             N.NATIONALITY_NAME,
             S.STUDIO_ID,
             N.NATIONALITY_ID
      FROM MOVIES M
      INNER JOIN NATIONALITIES N ON N.NATIONALITY_ID = M.NATIONALITY_ID
      INNER JOIN STUDIOS S ON S.STUDIO_ID = M.STUDIO_ID
      GROUP BY S.STUDIO_ID,
               N.NATIONALITY_ID
      ORDER BY S.STUDIO_ID ASC,
               NUM_MOVIES DESC)
   GROUP BY STUDIO_ID) MAX ON TOT.STUDIO_ID = MAX.STUDIO_ID
AND TOT.NUM_MOVIES = MAX.NUM_MOVIES
GROUP BY STUDIO_NAME

37- Indica cuál fue la primera película a la que accedieron los miembros de la plataforma cuyos teléfonos tengan como último dígito el ID de alguna nacionalidad
WITH PHONE_DIGIT AS
  (SELECT USER_NAME,
          USER_ID,
          SUBSTR(USER_PHONE, LENGTH(USER_PHONE), 1) AS LAST_NUMBER
   FROM USERS),
     USER_NAT AS
  (SELECT N.NATIONALITY_ID,
          M.USER_NAME,
          M.USER_ID
   FROM NATIONALITIES N
   INNER JOIN PHONE_DIGIT M ON N.NATIONALITY_ID = M.LAST_NUMBER),
     MOVIE_ACCESS AS
  (SELECT UN.NATIONALITY_ID,
          UN.USER_NAME,
          UMA.USER_ID,
          UMA.MOVIE_ID,
          UMA.ACCESS_DATE
   FROM USER_NAT UN
   INNER JOIN USER_MOVIE_ACCESS UMA ON UN.USER_ID = UMA.USER_ID),
     MIN_ACCESS AS
  (SELECT USER_ID,
          MIN(ACCESS_DATE) AS ACCESS_DATE
   FROM MOVIE_ACCESS
   GROUP BY USER_ID)
SELECT MOA.USER_NAME,
       M.MOVIE_NAME
FROM MOVIE_ACCESS MOA
INNER JOIN MIN_ACCESS MIA ON MOA.ACCESS_DATE = MIA.ACCESS_DATE
AND MOA.USER_ID = MIA.USER_ID
INNER JOIN MOVIES M ON MOA.MOVIE_ID = M.MOVIE_ID
